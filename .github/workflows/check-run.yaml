name: Check & Run

on:
  push:
    branches:
      - main

env:
  PYTHON_VERSION: "3.12"
  REGISTRY: ghcr.io
  DEV_IMAGE_NAME: ${{ github.repository }}

jobs:
  Code_Check:
    name: Checking Code For Errors
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install poetry
        run: pipx install poetry

      - name: Install python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'poetry'

      - name: Installing Python Packages
        run: poetry install

      - name: checking project
        run: |
          poetry run pre-commit run -a
          poetry run ruff check

  Run_Test:
    name: Runing Tests
    runs-on: ubuntu-latest
    needs: Code_Check
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare Project
        run: |
          cp .env.sample .env

      - name: Docker Compose Run
        run: |
          docker compose up -d

      - name: Wait 10 Second For Project Start
        run: |
          sleep 10

      - name: Checking Project
        run: |
          ./script/check_container.sh

      - name: Testing Api Endpoints
        run: |
          ./script/run_test.sh

      - name: Stoping Containers
        run: |
          docker compose down

  Build_Image:
    name: Building Docker Image & Push To Github Container Registry
    runs-on: ubuntu-latest
    needs: Run_Test
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.DEV_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=raw,value=dev_image

      - name: Build dev image and push to github
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
